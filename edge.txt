# 신입사원
- 정사각형이 아닌 직사각형(R != C)
- 기존 tc는 명함 개수가 충분함
- 문제를 잘 읽지 않고 K값을 제한을 두지 않으면 50, 22로 값이 나옴
- 2중 for문의 r,c를 하나의 같은 값으로 처리하면 인덱스 오류 발생 가능
- 답: 14, 12

2
7 5 100
0 0 0 0 0
0 1 1 1 0
0 0 1 0 0
0 0 2 0 0
0 0 2 0 0
0 1 1 1 0
1 1 1 1 1
2 3 2
1 1 1
1 2 1

# 백두산2
[가능한 엣지케이스]
1. test case 2개 이상으로 돌려보기
2. R, C 다르게 만들어보기
3. "운석의 개수는 한 개가 아니다."

- 1번째 test case(정답: 3 0): 운석 개수를 여러 개로 하여 기본 tc의 운석 개수만 보고 1군데에서만 bfs를 돌리는 실수할 수 있음
- 2번째 test case(정답: 5 1): r, c를 다르게 하여 2중 for문의 범위 문제 발생 가능, 운석 개수 여러 개
2
4 4 3
1 1
3 3
1 3
0 0 0 0
0 1 0 1
1 1 0 0
0 1 1 1
6 4 2
0 0
4 3
1 1 1 1
0 1 0 1
1 1 0 1
1 1 0 1
0 1 1 1
1 0 0 1

# 소똥구리
[고려해야 할 엣지케이스]
- 기본 tc에는 초기값을 0으로 두고 설정해도 문제가 없다.
- 아래 tc에서는 초기값을 1로 설정하지 않고 0으로 시작한다면 결과값이 달라진다.
- 만약 제한시간에 도달하는 경우 return만 종료조건으로 주었을 경우 index error가 발생하거나 mx를 계산할 수 없다.
- 두 번째 tc에서는 스스로 결과값을 100만 선택하는 경우라고 잘못 판단할 수 있음
2
8 100
1 3 5 7 8 10 12 15
8 4 
1 100 1 100 1 100 1 100